<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Nest of a vegetable dog named alei</title>
  
  <subtitle>全是水的博客网站</subtitle>
  <link href="https://ray-ling7.github.io/atom.xml" rel="self"/>
  
  <link href="https://ray-ling7.github.io/"/>
  <updated>2021-11-20T07:55:38.507Z</updated>
  <id>https://ray-ling7.github.io/</id>
  
  <author>
    <name>Ray-ling7</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>javascript摘记x</title>
    <link href="https://ray-ling7.github.io/2021/11/20/javascript%E6%91%98%E8%AE%B0x/"/>
    <id>https://ray-ling7.github.io/2021/11/20/javascript%E6%91%98%E8%AE%B0x/</id>
    <published>2021-11-20T07:38:08.153Z</published>
    <updated>2021-11-20T07:55:38.507Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-obj-getAttribute-“id”-和-obj-attr-的区别"><a href="#1-obj-getAttribute-“id”-和-obj-attr-的区别" class="headerlink" title="1.obj.getAttribute(“id”) 和 obj.attr 的区别"></a>1.obj.getAttribute(“id”) 和 obj.attr 的区别</h4><p>这两种方法都可用于 获取静态HTML元素的属性值，或者获取动态DOM元素中的属性值。</p><p>但是如果 想要获取的属性 是  自定义属性 ，即用户自己为元素定义的一个属性，而非元素所自带的属性。</p><p>（自定义属性 ex:此处的colorofbtn就是自定义属性。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;input id=&quot;btn&quot; type=&quot;button&quot; value=&quot;提交&quot; colorofbtn=&quot;red&quot;/&gt;</span><br></pre></td></tr></table></figure><p>此时用obj.attr则无法获取赋予的属性，只返回“undefined”</p><p>只有obj.getAttribute(“attr”)可以正确取到选定元素的自定义属性</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var btn1= document.getElementById(&quot;btn&quot;);</span><br><span class="line">btn1.getAttribute(&quot;colorofbtn&quot;);</span><br></pre></td></tr></table></figure><p>除了getAttribute(),setAttribute()也是相同的情况，在设置自定义属性时只能通过setAttribute()进行设置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">var btn1= document.getElementById(&quot;btn&quot;);</span><br><span class="line">btn1.setAttribute(&quot;colorofbtn&quot;,&quot;blue&quot;);</span><br></pre></td></tr></table></figure><h4 id="2-获取css属性值的方法限制"><a href="#2-获取css属性值的方法限制" class="headerlink" title="2.获取css属性值的方法限制"></a>2.获取css属性值的方法限制</h4><p>众所周知，CSS样式有三种，分别是行内样式、内部样式和外部样式。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">内联样式（行内样式）- 在HTML元素中使用&quot;style&quot; 属性</span><br><span class="line"></span><br><span class="line">内部样式表（内部样式） -在HTML文档头部 &lt;head&gt; 区域使用&lt;style&gt; 元素 来包含CSS</span><br><span class="line"></span><br><span class="line">外部引用（外部样式） - 使用外部 CSS 文件</span><br><span class="line">//来源：runoob.com</span><br></pre></td></tr></table></figure><h5 id="1-obj-style-attr"><a href="#1-obj-style-attr" class="headerlink" title="1.obj.style.attr"></a>1.obj.style.attr</h5><p>obj.style.attr只适用于行内样式，即在html元素行内sytle属性中的CSS样式。</p><h5 id="2-getComputedStyle"><a href="#2-getComputedStyle" class="headerlink" title="2.getComputedStyle"></a>2.getComputedStyle</h5><p>先看一下语句用法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Window.getComputedStyle()方法返回一个对象，该对象在应用活动样式表并解析这些值可能包含的任何基本计算后报告元素的所有CSS属性的值。 私有的CSS属性值可以通过对象提供的API或通过简单地使用CSS属性名称进行索引来访问。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let style = window.getComputedStyle(element, [pseudoElt]);</span><br></pre></td></tr></table></figure><p>element（驼峰命名）</p><p> 用于获取计算样式的 element 。</p><p>pseudoElt   (可选)</p><p>指定一个要匹配的伪元素的字符串。必须对普通元素省略（或<code>null</code>）。</p><p>//好像除了对伪元素之外 都可以省略后面这个部分，希望有高手能指点一下，官方文档看不太懂。。。</p><h6 id="1-对伪元素的用法"><a href="#1-对伪元素的用法" class="headerlink" title="1.对伪元素的用法"></a>1.对伪元素的用法</h6><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    h3::after &#123;</span><br><span class="line">        content: &quot;rocks!&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;h3&gt;generated content&lt;/h3&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">    let h3 = document.querySelector(&#x27;h3&#x27;),</span><br><span class="line">    result = getComputedStyle(h3, &#x27;::after&#x27;).content;</span><br><span class="line">    alert(`the generated content is: $&#123;result&#125;`);</span><br><span class="line">    console.log(`the generated content is: $&#123;result&#125;`);</span><br><span class="line">    // the generated content is: &quot;rocks!&quot;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">//来源：MDN Web Docs</span><br></pre></td></tr></table></figure><h6 id="2-返回值的问题"><a href="#2-返回值的问题" class="headerlink" title="2.返回值的问题"></a>2.返回值的问题</h6><p><code>getComputedStyle</code>的返回值是resolved values对于大多数属性，它是计算值computed value（布局前的值），但对于一些旧属性（包括宽度和高度），它是使用值used value（布局后的值）。 </p><p>//布局前与布局后的区别是， width 或者 height的 百分比可以代表元素的宽度，在布局后会被像素值替换。</p><p>补充知识：used value是啥：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CSS 属性的应用值（used value）是完成所有计算后最终使用的值；而计算分三个步骤，先取样式表中权重最高的样式规则，作为指定值（specified value)；继承（如果可继承），或者默认值；再按规范计算出最终值(例如， span 指定 position: absolute 后display 变为 block；尺寸比如 auto 或 百分数 换算为像素值 )， 结果即 应用值used value。</span><br></pre></td></tr></table></figure><p>在某些情况下，通过浏览器会特意返回不准确的值。 特别是在避免CSS 浏览历史泄露的安全问题， 比如，浏览者看过某个网站， 它的链接通常会变成蓝色带下划线的链接，通过判断链接的颜色（getComputedSytle(node, null).color) 是否为蓝色，就会泄露用户的浏览历史， 所以浏览器会特意返回不准确的值，保护用户隐私。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h4 id=&quot;1-obj-getAttribute-“id”-和-obj-attr-的区别&quot;&gt;&lt;a href=&quot;#1-obj-getAttribute-“id”-和-obj-attr-的区别&quot; class=&quot;headerlink&quot; title=&quot;1.obj.getAttribu</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>BFC的简单认知</title>
    <link href="https://ray-ling7.github.io/2021/11/20/BFC%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E7%9F%A5/"/>
    <id>https://ray-ling7.github.io/2021/11/20/BFC%E7%9A%84%E7%AE%80%E5%8D%95%E8%AE%A4%E7%9F%A5/</id>
    <published>2021-11-20T07:37:28.579Z</published>
    <updated>2021-11-20T07:55:22.853Z</updated>
    
    <content type="html"><![CDATA[<p>在学习移动端开发时接触到了BFC的清除浮动，就翻了很多的BFC学习博客，试着自己总结了一些知识点。如有错误或还可拓展的，希望前辈们能指点一二，笔者还是初学者也请多担待哈。</p><ol><li><h5 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h5><p>BFC即Blocking Formatting Contexts(块级格式化上下文)，是Web页面的可视CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p><p>其中的Formatting context是W3C CSS2.1中的一个概念。</p><p>通俗说BFC就是页面上一个单独的容器，它是一个独立的渲染区域，只规定容器内部的元素，而容器内的子元素也不会影响到外面的元素</p></li><li><h5 id="BFC的触发条件"><a href="#BFC的触发条件" class="headerlink" title="BFC的触发条件"></a>BFC的触发条件</h5><p>下列方式会创建<strong>块格式化上下文</strong>：</p><p><em>加粗的是常用的</em></p><ul><li>根元素（<code>&lt;html&gt;</code>）</li><li><strong>浮动元素（元素的 <code>float</code>不是<code>none</code>）</strong></li><li><strong>绝对定位元素（元素的 <code>position</code> 为 <code>absolute</code> 或 <code>fixed</code>）</strong></li><li><strong>行内块元素（元素的<code>display</code>为<code>inline-block</code>）</strong></li><li><strong>表格单元格（元素的 <code>display</code>为 <code>table-cell</code>，HTML表格单元格默认为该值）</strong></li><li><strong>表格标题（元素的 <code>display</code>为 <code>table-caption</code>，HTML表格标题默认为该值）</strong></li><li>匿名表格单元格元素（元素的 <code>display</code> 为 <code>table</code>、<code>table-row</code>、 <code>table-row-group</code>、<code>table-header-group </code>、<code>table-footer-group</code>（分别是HTML table、row、tbody、thead、tfoot 的默认属性）或 <code>inline-table</code>）</li><li><strong><code>overflow</code>计算值(Computed)不为 <code>visible</code> 的块元素</strong></li><li><code>display</code>值为 <code>flow-root</code> 的元素</li><li><code>contain</code>值为 <code>layout</code>、<code>content </code>或 paint 的元素</li><li><strong>弹性元素(<code>display </code>为 <code>flex</code> 或 <code>inline-flex </code>元素的直接子元素）</strong></li><li>网格元素（<code>display</code> 为 <code>grid</code> 或 <code>inline-grid</code> 元素的直接子元素）</li><li>多列容器（元素的 <code>column-count</code>或 <code>column-width</code>  不为 <code>auto</code>，包括 <code>column-count</code> 为 <code>1</code>）</li><li><code>column-span</code> 为 <code>all</code> 的元素始终会创建一个新的BFC，即使该元素没有包裹在一个多列容器中</li></ul></li><li><p><strong>BFC的布局规则</strong></p><ol><li>内部的box会垂直的一个接一个排列</li><li>Box垂直方向的距离由<code>margin</code>决定，同属于一个BFC的两个相邻盒子会发生重叠</li><li>在BFC中，每一个盒子的<code>margin-left</code>会触碰到容器的<code>border-left</code></li><li>BFC的区域不会与float box重叠，只会紧贴浮动边缘</li><li>计算BFC的高度时，也会检测浮动或定位的盒子高度</li></ol></li><li><p><strong>BFC的主要用途</strong></p><p>1.清除元素内部浮动</p><p>   当父盒子没有设置高度，子盒子设置浮动的时候，会发生高度塌陷；</p><p>   for example:</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"> html部分：</span><br><span class="line"> &lt;div class=&quot;far&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"> </span><br><span class="line"> css部分：</span><br><span class="line"> &lt;style&gt;</span><br><span class="line">        .far&#123;</span><br><span class="line">            border: 5px solid skyblue;</span><br><span class="line">            width: 250px;</span><br><span class="line">        &#125;</span><br><span class="line">        .child&#123;</span><br><span class="line">            border: 5px solid pink;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>   效果图：父盒子高度塌陷<br><img src="https://img-blog.csdnimg.cn/6dff912e89a043769eb0a331e8da80a2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALUljZWJ1cm50,size_17,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>这时候在父元素设为BFC就可以清楚子元素浮动；常用方法就是在父元素上设置<code>overflow:hidden</code>样式。</p>   <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">html部分：</span><br><span class="line"> &lt;div class=&quot;far&quot;&gt;</span><br><span class="line">        &lt;div class=&quot;child&quot;&gt;&lt;/div&gt;</span><br><span class="line"> &lt;/div&gt;</span><br><span class="line"> </span><br><span class="line"> css部分：</span><br><span class="line"> &lt;style&gt;</span><br><span class="line">        .far&#123;</span><br><span class="line">            border: 5px solid skyblue;</span><br><span class="line">            width: 250px;</span><br><span class="line">            overflow:hidden;</span><br><span class="line">        &#125;</span><br><span class="line">        .child&#123;</span><br><span class="line">            border: 5px solid pink;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            float: left;</span><br><span class="line">        &#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>   效果图：子盒子撑起父盒子<br><img src="https://img-blog.csdnimg.cn/3c597777e3024eedb29b1ec4e546b7e5.png" alt="在这里插入图片描述"></p></li></ol><pre><code> 2.避免margin值重叠属于同一个BFC的两个相邻的Box会发生margin重叠。</code></pre><p> 上例子：</p><pre><code>        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">html部分:</span><br><span class="line">&lt;p&gt;check1&lt;/p&gt;    </span><br><span class="line">&lt;p&gt;check2&lt;/p&gt;</span><br><span class="line">css部分：</span><br><span class="line">*&#123;            </span><br><span class="line">margin: 0;            </span><br><span class="line">padding: 0;        </span><br><span class="line">&#125;        </span><br><span class="line">p:nth-child(1)&#123; </span><br><span class="line">           background-color: skyblue; </span><br><span class="line">           color: white;            </span><br><span class="line">           text-align: center;            </span><br><span class="line">           width: 100px;            </span><br><span class="line">           line-height: 100px;            </span><br><span class="line">           margin: 50px;       </span><br><span class="line">            &#125;        </span><br><span class="line"> p:nth-child(2)&#123;            </span><br><span class="line"> background-color: pink;            </span><br><span class="line"> color: white;            </span><br><span class="line"> text-align: center;            </span><br><span class="line"> width: 100px;            </span><br><span class="line"> line-height: 100px;            </span><br><span class="line"> margin: 50px;        </span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>效果图：（可以看到两个盒子的中间的差距只剩50px)</code></pre><p><img src="https://img-blog.csdnimg.cn/8d12836d15e9478a9267bf3a5311555c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALUljZWJ1cm50,size_20,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"><br>这时候可以把第二个盒子置于另一个新的BFC中，margin值就不会发生重叠。</p><pre><code>        <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">html部分:</span><br><span class="line">&lt;p&gt;check1&lt;/p&gt;   </span><br><span class="line">&lt;p&gt;check2&lt;/p&gt;</span><br><span class="line">css部分：</span><br><span class="line">*&#123;            </span><br><span class="line">margin: 0;            </span><br><span class="line">padding: 0;        &#125;        </span><br><span class="line">p&#123;           </span><br><span class="line"> background-color: skyblue;            </span><br><span class="line"> color: white;            </span><br><span class="line"> text-align: center;            </span><br><span class="line"> width: 100px;            </span><br><span class="line"> line-height: 100px;            </span><br><span class="line"> margin: 50px;        </span><br><span class="line"> &#125;        </span><br><span class="line"> div&#123;        </span><br><span class="line"> overflow:hidden;       </span><br><span class="line">  &#125;        </span><br><span class="line">  div p&#123;            </span><br><span class="line">  background-color: pink;            </span><br><span class="line">  color: white;           </span><br><span class="line">  text-align: center;            </span><br><span class="line">  width: 100px;           </span><br><span class="line">   line-height: 100px;            </span><br><span class="line">   margin: 50px;        </span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>效果图：（两个盒子中间的差距变成一百）</code></pre><p><img src="https://img-blog.csdnimg.cn/cf553bc948a94d68b9cb1a99e07c9f5f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALUljZWJ1cm50,size_9,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p><p>​      </p><ol start="3"><li><p>阻止元素被浮动元素覆盖</p><p>here comes the example:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">html部分:</span><br><span class="line">&lt;div class=&quot;left&quot;&gt;leftleftleft&lt;/div&gt;</span><br><span class="line">    &lt;div class=&quot;right&quot;&gt;rightrightright&lt;/div&gt;</span><br><span class="line">css部分：</span><br><span class="line"> *&#123;</span><br><span class="line">        margin: 0;</span><br><span class="line">        padding: 0;</span><br><span class="line">        &#125;</span><br><span class="line">        .left&#123;</span><br><span class="line">            width: 100px;</span><br><span class="line">            height: 100px;</span><br><span class="line">            float: left;</span><br><span class="line">            background-color: skyblue;</span><br><span class="line">            text-align: center;</span><br><span class="line">            color: white;</span><br><span class="line">            font-size: 20px;</span><br><span class="line">        &#125;</span><br><span class="line">        .right&#123;</span><br><span class="line">            width: 300px;</span><br><span class="line">            height: 300px;</span><br><span class="line">            background-color: pink;</span><br><span class="line">            text-align: center;</span><br><span class="line">            color: white;</span><br><span class="line">            font-size: 30px;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><p>效果图：右盒子会被左盒子覆盖掉一部分<br><img src="https://img-blog.csdnimg.cn/b35463ec38db4df498bfb05a5fbdf9e2.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALUljZWJ1cm50,size_16,color_FFFFFF,t_70,g_se,x_16" alt="在这里插入图片描述"></p></li></ol><pre><code>       老办法，把被影响的盒子变成BFC，就不会被外部元素影响了      <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">   html部分:</span><br><span class="line">   &lt;div class=&quot;left&quot;&gt;leftleftleft&lt;/div&gt;</span><br><span class="line">       &lt;div class=&quot;right&quot;&gt;rightrightright&lt;/div&gt;</span><br><span class="line">   css部分：</span><br><span class="line">    *&#123;</span><br><span class="line">           margin: 0;</span><br><span class="line">           padding: 0;</span><br><span class="line">           &#125;</span><br><span class="line">           .left&#123;</span><br><span class="line">               width: 100px;</span><br><span class="line">               height: 100px;</span><br><span class="line">               float: left;</span><br><span class="line">               background-color: skyblue;</span><br><span class="line">               text-align: center;</span><br><span class="line">               color: white;</span><br><span class="line">               font-size: 20px;</span><br><span class="line">           &#125;</span><br><span class="line">           .right&#123;</span><br><span class="line">               width: 300px;</span><br><span class="line">               height: 300px;</span><br><span class="line">               background-color: pink;</span><br><span class="line">               text-align: center;</span><br><span class="line">               color: white;</span><br><span class="line">               font-size: 30px;</span><br><span class="line">               overflow:hidden;</span><br><span class="line">           &#125;</span><br><span class="line"></span><br><span class="line">![在这里插入图片描述](https://img-blog.csdnimg.cn/18b1b7a699ec46f7b8a5d2f99fd75d09.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBALUljZWJ1cm50,size_19,color_FFFFFF,t_70,g_se,x_16)</span><br><span class="line"></span><br></pre></td></tr></table></figure></code></pre><p>   效果图：右盒子被挤开了</p><p>   这个方法可以用来实现两列自适应布局。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在学习移动端开发时接触到了BFC的清除浮动，就翻了很多的BFC学习博客，试着自己总结了一些知识点。如有错误或还可拓展的，希望前辈们能指点一二，笔者还是初学者也请多担待哈。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;h5 id=&quot;概念&quot;&gt;&lt;a href=&quot;#概念&quot; class=&quot;heade</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://ray-ling7.github.io/2021/11/20/hello-world/"/>
    <id>https://ray-ling7.github.io/2021/11/20/hello-world/</id>
    <published>2021-11-20T02:31:07.281Z</published>
    <updated>2021-11-20T07:39:40.093Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><p>希望越来越好</p><p>Everything start from scratch.</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
